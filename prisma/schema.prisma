// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_URL")
}

model user_bio {
  id                BigInt         @id @default(autoincrement())
  created_at        DateTime       @default(now()) @db.Timestamptz()
  first_name        String?
  last_name         String?
  email             String?
  position           String?
  motivation         String?
  educational_degree String?
  experience         String?
  behavioral        behavioral[]  
  calculations      calculations[]
  multiple_choice   multiple_choice[]
  response          response[]
  user_files        user_files[]
}

model behavioral {
  id            BigInt     @id @default(autoincrement())
  created_at    DateTime   @default(now()) @db.Timestamptz()
  question      String?
  user_response String?
  ai_response   String?
  user_id       BigInt?
  user          user_bio?  @relation(fields: [user_id], references: [id])
}

model calculations {
  id                      BigInt     @id @default(autoincrement())
  created_at              DateTime   @default(now()) @db.Timestamptz()
  question                String?
  answer_numerical        Float?
  user_response_numerical Float?
  user_response_text      String?
  answer_explanation      String?
  ai_response             String?
  user_id                 BigInt?
  user                    user_bio?  @relation(fields: [user_id], references: [id])
}

model multiple_choice {
  id              BigInt     @id @default(autoincrement())
  created_at      DateTime   @default(now()) @db.Timestamptz()
  question        String?
  option_a        String?
  option_b        String?
  option_c        String?
  option_d        String?
  user_response   String?
  correct_answer  String?
  ai_response     String?
  user_id         BigInt?
  user            user_bio?  @relation(fields: [user_id], references: [id])
}

model response {
  id            BigInt     @id @default(autoincrement())
  created_at    DateTime   @default(now()) @db.Timestamptz()
  question      String?
  user_response String?
  ai_response   String?
  user_id       BigInt?
  user          user_bio?  @relation(fields: [user_id], references: [id])
}

model user_files {
  id          BigInt     @id @default(autoincrement())
  created_at  DateTime   @default(now()) @db.Timestamptz()
  user_id     BigInt
  file_type   String
  file_name   String
  bucket_name String
  file_path   String
  user        user_bio   @relation(fields: [user_id], references: [id])
}
